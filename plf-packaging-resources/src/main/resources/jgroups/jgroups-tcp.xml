<!--

    Copyright (C) 2003-2013 eXo Platform SAS.

    This is free software; you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation; either version 3 of
    the License, or (at your option) any later version.

    This software is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this software; if not, write to the Free
    Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
    02110-1301 USA, or see the FSF site: http://www.fsf.org.

-->
<config xmlns="urn:org:jgroups"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="urn:org:jgroups http://www.jgroups.org/schema/JGroups-3.2.xsd">
	<!-- jgroups.tcp.start_port defines the start of the range of TCP ports the server should bind to.
		The server socket is bound to the first available port from start_port.
		If no available port is found (e.g., because of a firewall) before the end_port, the server throws an exception.
		If no end_port is provided or end_port < start_port then there is no upper limit on the port range.
		If start_port == end_port, then we force JGroups to use the given port (start fails if port is not available).
		The default is 7800. If set to 0, then the operating system will pick a port.
		Please, bear in mind that setting it to 0 will work only if we use MPING or TCPGOSSIP as discovery protocol
		because TCCPING requires listing the nodes and their corresponding ports. -->
    <!--
        According to the JGroups XSD3.0.x, the property start_port is no longer supported, it's deprecated by bind_port
    -->
	<TCP singleton_name="exo-transport-tcp"
        bind_port="${jgroups.tcp.bind_port:7800}"
        loopback="true"
        recv_buf_size="${tcp.recv_buf_size:20M}"
        send_buf_size="${tcp.send_buf_size:640K}"
        discard_incompatible_packets="true"
        max_bundle_size="64K"
        max_bundle_timeout="30"
        enable_bundling="false"
        use_send_queues="false"
        sock_conn_timeout="300"
        timer_type="new"
        timer.min_threads="4"
        timer.max_threads="25"
        timer.keep_alive_time="3000"
        timer.queue_max_size="500"
        thread_pool.enabled="true"
        thread_pool.min_threads="1"
        thread_pool.max_threads="25"
        thread_pool.keep_alive_time="5000"
        thread_pool.queue_enabled="false"
        thread_pool.queue_max_size="100"
        thread_pool.rejection_policy="run"

        oob_thread_pool.enabled="true"
        oob_thread_pool.min_threads="1"
        oob_thread_pool.max_threads="8"
        oob_thread_pool.keep_alive_time="5000"
        oob_thread_pool.queue_enabled="false"
        oob_thread_pool.queue_max_size="100"
        oob_thread_pool.rejection_policy="run"/>
	<!-- jgroups.tcpping.initial_hosts : Initial hosts in your cluster - Comma separated list of entries hostname[port]. ex : host1[7800],host2[8800],host3[9800] -->
	<!-- jgroups.tcpping.num_initial_members : Initial number of hosts in your cluster -->
   <TCPPING timeout="3000"
            initial_hosts="${jgroups.tcpping.initial_hosts:localhost[7800]}"
            port_range="1"
            num_initial_members="${jgroups.tcpping.num_initial_members:1}"/>
	<MERGE2 max_interval="100000"
            min_interval="20000"/>
   <FD_SOCK/>
	<FD timeout="10000" max_tries="5"/>
   <VERIFY_SUSPECT timeout="1500"  />
   <BARRIER />
	<pbcast.NAKACK use_mcast_xmit="false"
				retransmit_timeout="300,600,1200,2400,4800"
                  discard_delivered_msgs="true"/>
	<UNICAST timeout="300,600,1200"/>
   <pbcast.STABLE stability_delay="1000" desired_avg_gossip="50000"
                 max_bytes="400000"/>
   <pbcast.GMS print_local_addr="true" join_timeout="3000"
               view_bundling="true"/>
   <UFC max_credits="2M"
        min_threshold="0.10"/>
   <MFC max_credits="2M"
        min_threshold="0.10"/>
   <FRAG2 frag_size="60K"  />
   <pbcast.STATE_TRANSFER/>
</config>