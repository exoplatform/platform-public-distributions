#
# Copyright (C) 2003-2013 eXo Platform SAS.
#
# This is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 3 of
# the License, or (at your option) any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this software; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA, or see the FSF site: http://www.fsf.org.
#

# Location of feature manifests (comma separated)
shindig.features.default=res://features/default-features.txt,res://features/online-features.txt

# Location of container configurations (comma separated)
shindig.containers.default=res://containers/default/container.js

### Inbound OAuth support
# The URL base to use for full OAuth support (three-legged)
shindig.oauth.base-url=/oauth
shindig.oauth.authorize-action=/WEB-INF/authorize.jsp
# The range to the past and future of timestamp for OAuth token validation. Default to 5 minutes
shindig.oauth.validator-max-timestamp-age-ms=300000

### Outbound OAuth support
shindig.signing.state-key=
shindig.signing.key-name=
shindig.signing.key-file=
shindig.signing.global-callback-url=http://localhost:8080/gadgets/oauthcallback
shindig.signing.enable-signed-callbacks=true

### If a OAuth2Client does not specify a redirect uri it will default here
shindig.oauth2.global-redirect-uri=http://%authority%%contextRoot%/gadgets/oauth2callback
### Setting to true will cause the registered OAuth2Persistence plugin to load it's values
### with what's in config/oauth2.json, no meaning without a second persistence implementation.
shindig.oauth2.import=false
### Determines if the import will start by removing everything currently in persistence.
shindig.oauth2.import.clean=false
# Set to true if you want to allow the use of 3-party (authorization_code) OAuth 2.0 flow when viewer != owner.
# This setting is not recommended for pages that allow user-controlled javascript, since
# that javascript could be used to make unauthorized requests on behalf of the viewer of the page
shindig.oauth2.viewer-access-tokens-enabled=true
# Set to true to send extended trace messages to the client.  Probably want this to be false for
# production systems and true for test/development.
shindig.oauth2.send-trace-to-client=true
shindig.signing.oauth2.state-key=

# Set to true if you want to allow the use of 3-legged OAuth tokens when viewer != owner.
# This setting is not recommended for pages that allow user-controlled javascript, since
# that javascript could be used to make unauthorized requests on behalf of the viewer of the page
shindig.signing.viewer-access-tokens-enabled=false

# If enabled here, configuration values can be found in container configuration files.
shindig.locked-domain.enabled=false

# Enable or disable referrer check.
shindig.locked-domain.refererCheck.enabled=false

# TODO: This needs to be moved to container configuration.
shindig.content-rewrite.only-allow-excludes=false
shindig.content-rewrite.include-urls=.*
shindig.content-rewrite.exclude-urls=[http://|https://]
shindig.content-rewrite.include-tags=body,embed,img,input,link,script,style
shindig.content-rewrite.expires=86400
shindig.content-rewrite.enable-split-js-concat=true
shindig.content-rewrite.enable-single-resource-concat=false

#
# Default set of forced libs to allow for better caching
#
# NOTE: setting this causes the EndToEnd test to fail the opensocial-templates test
shindig.gadget-rewrite.default-forced-libs=core:rpc
#shindig.gadget-rewrite.default-forced-libs=

#
# Allow supported JavaScript features required by a gadget to be externalized on demand
shindig.gadget-rewrite.externalize-feature-libs=false

# Configuration for image rewriter
shindig.image-rewrite.max-inmem-bytes = 1048576
shindig.image-rewrite.max-palette-size = 256
shindig.image-rewrite.allow-jpeg-conversion = true
shindig.image-rewrite.jpeg-compression = 0.75
shindig.image-rewrite.min-threshold-bytes = 200
shindig.image-rewrite.jpeg-retain-subsampling = false
# Huffman optimization reduces the images size by addition 4-6% without
# any loss in the quality of the image, but takes extra cpu cycles for
# computing the optimized huffman tables.
shindig.image-rewrite.jpeg-huffman-optimization = false

# Configuration for the os:Flash tag
shindig.flash.min-version = 9.0.115

# Configuration for template rewriter
shindig.template-rewrite.extension-tag-namespace=http://ns.opensocial.org/2009/extensions

# These values provide default TTLs (in ms) for HTTP responses that don't use caching headers.
shindig.cache.http.defaultTtl=3600000
shindig.cache.http.negativeCacheTtl=60000

# Amount of time after which the entry in cache should be considered for a refetch for a
# non-userfacing internal fetch when the response is strict-no-cache.
shindig.cache.http.strict-no-cache-resource.refetch-after-ms=-1

# A default refresh interval for XML files, since there is no natural way for developers to
# specify this value, and most HTTP responses don't include good cache control headers.
shindig.cache.xml.refreshInterval=300000

# Add entries in the form shindig.cache.lru.<name>.capacity to specify capacities for different
# caches when using the LruCacheProvider.
# It is highly recommended that the EhCache implementation be used instead of the LRU cache.
shindig.cache.lru.default.capacity=1000
shindig.cache.lru.expressions.capacity=1000
shindig.cache.lru.gadgetSpecs.capacity=1000
shindig.cache.lru.messageBundles.capacity=1000
shindig.cache.lru.httpResponses.capacity=10000

# The location of the EhCache configuration file.
shindig.cache.ehcache.config=res://org/apache/shindig/common/cache/ehcache/ehcacheConfig.xml

# The location of the filter file for EhCache's SizeOfEngine
# This gets set as a system property to be consumed by EhCache.
# Can be a resource on the classpath or a path on the file system.
shindig.cache.ehcache.sizeof.filter=res://org/apache/shindig/common/cache/ehcache/SizeOfFilter.txt

# true to enable JMX integration.
shindig.cache.ehcache.jmx.enabled=true

# true to enable JMX stats.
shindig.cache.ehcache.jmx.stats=true

# true to skip expensive encoding detection.
# if true, will only attempt to validate utf-8. Assumes all other encodings are ISO-8859-1.
shindig.http.fast-encoding-detection=true

# Configuration for the HttpFetcher
# Connection timeout, in milliseconds, for requests.
shindig.http.client.connection-timeout-ms=5000

# Maximum size, in bytes, of the object we fetched, 0 == no limit
shindig.http.client.max-object-size-bytes=0

# Strict-mode parsing for proxy and concat URIs ensures that the authority/host and path
# for the URIs match precisely what is found in the container config for it. This is
# useful where statistics and traffic routing patterns, typically in large installations,
# key on hostname (and occasionally path). Enforcing this does come at the cost that
# mismatches break, which in turn mandates that URI generation always happen in consistent
# fashion, ie. by the class itself or tightly controlled code.
shindig.uri.proxy.use-strict-parsing=false
shindig.uri.concat.use-strict-parsing=false

# Host:port of the proxy to use while fetching urls. Leave blank if proxy is
# not to be used.
org.apache.shindig.gadgets.http.basicHttpFetcherProxy=

org.apache.shindig.serviceExpirationDurationMinutes=60

#
# Older versions of shindig used 'data' in the json-rpc response format
# The spec calls for using 'result' instead, however to avoid breakage we
# allow you to set it back to the old way here
#
# valid values are
#  result  - new form
#  data    - old broken form
#  both    - return both fields for full compatibility
#
shindig.json-rpc.result-field=result

# Remap "Internal server error"s received from the basicHttpFetcherProxy server to
# "Bad Gateway error"s, so that it is clear to the user that the proxy server is
# the one that threw the exception.
shindig.accelerate.remapInternalServerError=true
shindig.proxy.remapInternalServerError=true

# Add debug data when using VanillaCajaHtmlParser.
vanillaCajaParser.needsDebugData=true

# Allow non-SSL OAuth 2.0 bearer tokens
org.apache.shindig.auth.oauth2-require-ssl=false

# Set gadget param in proxied uri as authority if this is true
org.apache.shindig.gadgets.uri.setAuthorityAsGadgetParam=false

# Maximum Get Url size limit
org.apache.shindig.gadgets.uri.urlMaxLength=2048

# Default cachettl value for versioned url in seconds. Here default value is 1 year.
org.apache.shindig.gadgets.servlet.longLivedRefreshSec=31536000

# Closure compiler optimization level.  One of advanced|simple|whitespace_only|none.
# Defaults to simple.
shindig.closure.compile.level=simple

# Size of the compiler thread pool
shindig.closure.compile.threadPoolSize=5

# OAuth 2.0 authorization code, access token, and refresh token expiration times.
# 5 * 60 * 1000 = 300000 = 5 minutes
# 5 * 60 * 60 * 1000 = 18000000 = 5 hours
# 5 * 60 * 60 * 1000 * 24 = 432000000 = 5 days
shindig.oauth2.authCodeExpiration=300000
shindig.oauth2.accessTokenExpiration=18000000
shindig.oauth2.refreshTokenExpiration=432000000

# Allows unauthenticated requests to Shindig
shindig.allowUnauthenticated=true

# Allows JSONP requests to Shindig
shindig.allowJSONP=true

# Comma separated tags that need to have its relative path to be resolved as absolute.
# Possible values are RESOURCES and HYPERLINKS
shindig.gadgets.rewriter.absolutePath.tags=RESOURCES

# Configure cache characteristics of js content (max-age in seconds)
# where -1 caches "forever, 0 means "no-cache"
shindig.jscontent.unversioned.maxage=3600
shindig.jscontent.versioned.maxage=-1
shindig.jscontent.invalid.maxage=0
